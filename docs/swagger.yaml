definitions:
  request.CreateOrderRequest:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/request.Item'
        type: array
    type: object
  request.Item:
    properties:
      description:
        type: string
      item_id:
        type: integer
      itemCode:
        type: string
      quantity:
        type: integer
    type: object
  request.UpdateOrderRequest:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/request.Item'
        type: array
    type: object
  response.CreateOrderResponse:
    properties:
      order:
        $ref: '#/definitions/response.Order'
    type: object
  response.DeleteOrderResponse:
    properties:
      message:
        type: string
    type: object
  response.FindAllOrderResponse:
    properties:
      order:
        items:
          $ref: '#/definitions/response.Order'
        type: array
    type: object
  response.FindOneOrderResponse:
    properties:
      order:
        $ref: '#/definitions/response.Order'
    type: object
  response.Item:
    properties:
      description:
        type: string
      item_code:
        type: string
      item_id:
        type: integer
      quantity:
        type: integer
    type: object
  response.Order:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/response.Item'
        type: array
      order_id:
        type: integer
      orderedAt:
        type: string
    type: object
  response.UpdateOrderResponse:
    properties:
      order:
        $ref: '#/definitions/response.Order'
    type: object
info:
  contact: {}
paths:
  /orders:
    get:
      consumes:
      - '*/*'
      description: Mendapatkan semua order yang telah di generate
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FindAllOrderResponse'
        "500":
          description: error
          schema:
            type: string
      summary: Mendapatkan semua order yang telah di generate
      tags:
      - Orders
    post:
      consumes:
      - '*/*'
      description: Mendaftarkan/membuat satu order
      parameters:
      - description: Order
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateOrderResponse'
        "500":
          description: error
          schema:
            type: string
      summary: Mendaftarkan/membuat satu order
      tags:
      - Orders
  /orders/{id}:
    delete:
      consumes:
      - '*/*'
      description: Menghapus Order yang sudah dibuat berdasarkan id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteOrderResponse'
        "400":
          description: error
          schema:
            type: string
      summary: Menghapus Order yang sudah dibuat berdasarkan id
      tags:
      - Orders
    get:
      consumes:
      - '*/*'
      description: Mendapatkan satu order yang telah dibuat dengan id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FindOneOrderResponse'
        "500":
          description: error
          schema:
            type: string
      summary: Mendapatkan satu order yang telah dibuat dengan id
      tags:
      - Orders
    put:
      consumes:
      - '*/*'
      description: Mengupdate satu Order yang sudah terbuat berdasarkan id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Order
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateOrderResponse'
        "500":
          description: error
          schema:
            type: string
      summary: Mengupdate satu Order yang sudah terbuat berdasarkan id
      tags:
      - Orders
swagger: "2.0"
